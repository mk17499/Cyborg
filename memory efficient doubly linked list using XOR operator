#include<bits/stdc++.h>
using namespace std;

struct node
{
    int a;
    node *npx;
}*root=NULL,*add=NULL,*last_add=NULL,*last=NULL;
node *newnode(int data)
{
    node *temp=new node;
    temp->a=data;
    return temp;
}
void insertnode()
{
    while(1)
    {
        cout<<"ENTER DATA :\n";
        int data,a;
        cin>>data;
      if(root==NULL)
       {
          root=newnode(data);
          add=root;
          last_add=NULL;
          last=root;
          cout<<"IS THIS THE LAST NODE ?\nYES : PRESS 1 \nNO : PRESS 0 \n";
          cin>>a;
          if(a)
          {
            root->npx=(struct node*)(uintptr_t(NULL)^uintptr_t(NULL));
            break;
          }

       }
      else
       {
          node *temp=newnode(data);
          add->npx=(struct node*)((uintptr_t)(last_add)^(uintptr_t)(temp));
          last_add=add;
          add=temp;
          last=temp;
          cout<<"IS THIS THE LAST NODE ?\nYES : PRESS 1 \nNO : PRESS 0 \n";
          cin>>a;
          if(a)
          {
              temp->npx=(struct node*)((uintptr_t)(last_add)^uintptr_t(NULL));
              break;
          }
       }
    }
}
void show()
{
    node *temp=root;
    node *util=NULL;
    node *curr=root;
        //for the first node
        cout<<temp->a<<" ";
        temp=(struct node*)(uintptr_t(temp->npx)^uintptr_t(util));
        util=root;

        //for the rest of the nodes
        while(temp!=NULL)
        {
            curr=temp;
            cout<<temp->a<<" ";
            temp=(struct node*)(uintptr_t(temp->npx)^uintptr_t(util));
            util=curr;
        }
}
int main()
{
    insertnode();
    show();
    return 0;
}
